<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.demo.dao.StoreReviewMapper">
    <resultMap type="com.example.demo.entity.StoreReview" id="store_review_result">
        <result property="reviewID" column="review_id" jdbcType="VARCHAR"/>
        <result property="orderId" column="order_id" jdbcType="VARCHAR"/>
        <result property="storeId" column="store_id" jdbcType="VARCHAR"/>
        <result property="customerID" column="customer_id" jdbcType="VARCHAR"/>
        <result property="rating" column="rating" jdbcType="INTEGER"/>
        <result property="comment" column="comment" jdbcType="VARCHAR"/>
        <result property="reviewDate" column="review_date" jdbcType="TIMESTAMP"/>
        <result property="status" column="status" jdbcType="VARCHAR"/>
        <result property="response" column="response" jdbcType="VARCHAR"/>
        <result property="responseDate" column="response_date" jdbcType="TIMESTAMP"/>
    </resultMap>

    <sql id="base_column_list">
        review_id, order_id, store_id, customer_id, rating, comment, review_date, status, response, response_date
    </sql>

    <select id="selectByReviewId" resultMap="store_review_result">
        select
        <include refid="base_column_list"/>
        from store_reviews
        where review_id = #{reviewId}
    </select>

    <select id="selectByStoreId" resultMap="store_review_result">
        select
        <include refid="base_column_list"/>
        from store_reviews
        where store_id = #{storeId}
    </select>

    <insert id="insertSelective" parameterType="com.example.demo.entity.StoreReview">
        insert into store_reviews
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="reviewID != null">review_id,</if>
            <if test="orderId != null">order_id,</if>
            <if test="storeId != null">store_id,</if>
            <if test="customerID != null">customer_id,</if>
            <if test="rating != null">rating,</if>
            <if test="comment != null">comment,</if>
            <if test="reviewDate != null">review_date,</if>
            <if test="status != null">status,</if>
            <if test="response != null">response,</if>
            <if test="responseDate != null">response_date,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="reviewID != null">#{reviewID},</if>
            <if test="orderId != null">#{orderId},</if>
            <if test="storeId != null">#{storeId},</if>
            <if test="customerID != null">#{customerID},</if>
            <if test="rating != null">#{rating},</if>
            <if test="comment != null">#{comment},</if>
            <if test="reviewDate != null">#{reviewDate},</if>
            <if test="status != null">#{status},</if>
            <if test="response != null">#{response},</if>
            <if test="responseDate != null">#{responseDate},</if>
        </trim>
    </insert>

    <delete id="deleteByReviewId" parameterType="String">
        delete from store_reviews
        where review_id = #{reviewId}
    </delete>

    <update id="updateByReviewId" parameterType="com.example.demo.entity.StoreReview">
        update store_reviews
        <set>
            <if test="orderId != null">order_id = #{orderId},</if>
            <if test="storeId != null">store_id = #{storeId},</if>
            <if test="customerID != null">customer_id = #{customerID},</if>
            <if test="rating != null">rating = #{rating},</if>
            <if test="comment != null">comment = #{comment},</if>
            <if test="reviewDate != null">review_date = #{reviewDate},</if>
            <if test="status != null">status = #{status},</if>
            <if test="response != null">response = #{response},</if>
            <if test="responseDate != null">response_date = #{responseDate},</if>
        </set>
        where review_id = #{reviewID}
    </update>

    <select id="getNumOfReviewsByStoreId" parameterType="String" resultType="int">
        select count(*) from store_reviews
        where store_id=#{storeId}
    </select>
</mapper>
